
LCD_4bit_ANS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000950  000009c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000950  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000009ea  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a48  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000a88  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f0b  00000000  00000000  00000b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000978  00000000  00000000  00001a13  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005d1  00000000  00000000  0000238b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000128  00000000  00000000  0000295c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004d9  00000000  00000000  00002a84  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005ce  00000000  00000000  00002f5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  0000352b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	59 c0       	rjmp	.+178    	; 0xb8 <__vector_1>
   6:	00 00       	nop
   8:	65 c0       	rjmp	.+202    	; 0xd4 <__vector_2>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e5       	ldi	r30, 0x50	; 80
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 32       	cpi	r26, 0x26	; 38
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	02 d1       	rcall	.+516    	; 0x2b8 <main>
  b4:	4b c4       	rjmp	.+2198   	; 0x94c <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <__vector_1>:
#define LCD_PORT PORTC  
#define ENABLE PORTC |= 0x04  
#define DISABLE PORTC &= ~0x04  

ISR(INT0_vect) 
{ 
  b8:	1f 92       	push	r1
  ba:	0f 92       	push	r0
  bc:	0f b6       	in	r0, 0x3f	; 63
  be:	0f 92       	push	r0
  c0:	11 24       	eor	r1, r1
  c2:	8f 93       	push	r24
	PORTA=0xaa; 
  c4:	8a ea       	ldi	r24, 0xAA	; 170
  c6:	8b bb       	out	0x1b, r24	; 27
} 
  c8:	8f 91       	pop	r24
  ca:	0f 90       	pop	r0
  cc:	0f be       	out	0x3f, r0	; 63
  ce:	0f 90       	pop	r0
  d0:	1f 90       	pop	r1
  d2:	18 95       	reti

000000d4 <__vector_2>:
ISR(INT1_vect) 
{ 
  d4:	1f 92       	push	r1
  d6:	0f 92       	push	r0
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	0f 92       	push	r0
  dc:	11 24       	eor	r1, r1
  de:	8f 93       	push	r24
	PORTA=0x55; 
  e0:	85 e5       	ldi	r24, 0x55	; 85
  e2:	8b bb       	out	0x1b, r24	; 27
} 
  e4:	8f 91       	pop	r24
  e6:	0f 90       	pop	r0
  e8:	0f be       	out	0x3f, r0	; 63
  ea:	0f 90       	pop	r0
  ec:	1f 90       	pop	r1
  ee:	18 95       	reti

000000f0 <ToggleEpinOfLCD>:
void ToggleEpinOfLCD(void)  
{ 
	ENABLE; 
  f0:	85 b3       	in	r24, 0x15	; 21
  f2:	84 60       	ori	r24, 0x04	; 4
  f4:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f6:	8f e8       	ldi	r24, 0x8F	; 143
  f8:	91 e0       	ldi	r25, 0x01	; 1
  fa:	01 97       	sbiw	r24, 0x01	; 1
  fc:	f1 f7       	brne	.-4      	; 0xfa <ToggleEpinOfLCD+0xa>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <ToggleEpinOfLCD+0x10>
 100:	00 00       	nop
	 _delay_us(100);  
	DISABLE;  
 102:	85 b3       	in	r24, 0x15	; 21
 104:	8b 7f       	andi	r24, 0xFB	; 251
 106:	85 bb       	out	0x15, r24	; 21
 108:	8f e8       	ldi	r24, 0x8F	; 143
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	01 97       	sbiw	r24, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <ToggleEpinOfLCD+0x1c>
 110:	00 c0       	rjmp	.+0      	; 0x112 <ToggleEpinOfLCD+0x22>
 112:	00 00       	nop
 114:	08 95       	ret

00000116 <instruction_out>:
	_delay_us(100);  
}  
//명령어 쓰기 함수  
void instruction_out(unsigned char b)  
{ // 상위 4BIT 출력  
	LCD_PORT = b & 0xF0;  
 116:	98 2f       	mov	r25, r24
 118:	90 7f       	andi	r25, 0xF0	; 240
 11a:	95 bb       	out	0x15, r25	; 21
	ENABLE; //E = 1  
 11c:	95 b3       	in	r25, 0x15	; 21
 11e:	94 60       	ori	r25, 0x04	; 4
 120:	95 bb       	out	0x15, r25	; 21
	DISABLE; //E = 0  
 122:	95 b3       	in	r25, 0x15	; 21
 124:	9b 7f       	andi	r25, 0xFB	; 251
 126:	95 bb       	out	0x15, r25	; 21
	//하위 4BIT 출력  
	LCD_PORT = (b << 4) & 0xF0;  
 128:	20 e1       	ldi	r18, 0x10	; 16
 12a:	82 9f       	mul	r24, r18
 12c:	c0 01       	movw	r24, r0
 12e:	11 24       	eor	r1, r1
 130:	85 bb       	out	0x15, r24	; 21
	ENABLE; //E = 1  
 132:	85 b3       	in	r24, 0x15	; 21
 134:	84 60       	ori	r24, 0x04	; 4
 136:	85 bb       	out	0x15, r24	; 21
	DISABLE; //E = 0  
 138:	85 b3       	in	r24, 0x15	; 21
 13a:	8b 7f       	andi	r24, 0xFB	; 251
 13c:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 13e:	8f ef       	ldi	r24, 0xFF	; 255
 140:	96 e7       	ldi	r25, 0x76	; 118
 142:	21 e0       	ldi	r18, 0x01	; 1
 144:	81 50       	subi	r24, 0x01	; 1
 146:	90 40       	sbci	r25, 0x00	; 0
 148:	20 40       	sbci	r18, 0x00	; 0
 14a:	e1 f7       	brne	.-8      	; 0x144 <instruction_out+0x2e>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <instruction_out+0x38>
 14e:	00 00       	nop
 150:	08 95       	ret

00000152 <char_out>:
	_delay_ms(30);  
}  
//LCD에 한문자 출력 함수 
void char_out(unsigned char b)
{ 
	LCD_PORT = (b & 0xF0) | 0x01;  
 152:	98 2f       	mov	r25, r24
 154:	90 7f       	andi	r25, 0xF0	; 240
 156:	91 60       	ori	r25, 0x01	; 1
 158:	95 bb       	out	0x15, r25	; 21
	ENABLE; //E = 1  
 15a:	95 b3       	in	r25, 0x15	; 21
 15c:	94 60       	ori	r25, 0x04	; 4
 15e:	95 bb       	out	0x15, r25	; 21
	DISABLE; //E = 0  
 160:	95 b3       	in	r25, 0x15	; 21
 162:	9b 7f       	andi	r25, 0xFB	; 251
 164:	95 bb       	out	0x15, r25	; 21
	LCD_PORT = ((b << 4) & 0xF0) | 0x01;  
 166:	20 e1       	ldi	r18, 0x10	; 16
 168:	82 9f       	mul	r24, r18
 16a:	c0 01       	movw	r24, r0
 16c:	11 24       	eor	r1, r1
 16e:	81 60       	ori	r24, 0x01	; 1
 170:	85 bb       	out	0x15, r24	; 21
	ENABLE; //E = 1  
 172:	85 b3       	in	r24, 0x15	; 21
 174:	84 60       	ori	r24, 0x04	; 4
 176:	85 bb       	out	0x15, r24	; 21
	DISABLE; //E = 0  
 178:	85 b3       	in	r24, 0x15	; 21
 17a:	8b 7f       	andi	r24, 0xFB	; 251
 17c:	85 bb       	out	0x15, r24	; 21
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	96 e7       	ldi	r25, 0x76	; 118
 182:	21 e0       	ldi	r18, 0x01	; 1
 184:	81 50       	subi	r24, 0x01	; 1
 186:	90 40       	sbci	r25, 0x00	; 0
 188:	20 40       	sbci	r18, 0x00	; 0
 18a:	e1 f7       	brne	.-8      	; 0x184 <char_out+0x32>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <char_out+0x3c>
 18e:	00 00       	nop
 190:	08 95       	ret

00000192 <string_out>:
	_delay_ms(30);  
}  
//문자열 출력 함수  
void string_out(char *str)  
{  
 192:	0f 93       	push	r16
 194:	1f 93       	push	r17
 196:	cf 93       	push	r28
 198:	df 93       	push	r29
 19a:	8c 01       	movw	r16, r24
	unsigned int i = 0;  
 19c:	c0 e0       	ldi	r28, 0x00	; 0
 19e:	d0 e0       	ldi	r29, 0x00	; 0
	//NULL 문자를 만날 때 까지 캐릭터 출력  
	do{  
	char_out(str[i]); 
 1a0:	f8 01       	movw	r30, r16
 1a2:	ec 0f       	add	r30, r28
 1a4:	fd 1f       	adc	r31, r29
 1a6:	80 81       	ld	r24, Z
 1a8:	d4 df       	rcall	.-88     	; 0x152 <char_out>
	} while(str[++i]!='\0'); 
 1aa:	21 96       	adiw	r28, 0x01	; 1
 1ac:	f8 01       	movw	r30, r16
 1ae:	ec 0f       	add	r30, r28
 1b0:	fd 1f       	adc	r31, r29
 1b2:	80 81       	ld	r24, Z
 1b4:	81 11       	cpse	r24, r1
 1b6:	f4 cf       	rjmp	.-24     	; 0x1a0 <string_out+0xe>
}  
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	1f 91       	pop	r17
 1be:	0f 91       	pop	r16
 1c0:	08 95       	ret

000001c2 <Port_Init>:
// PORT 초기화  
void Port_Init(void)  
{  
	//PORTC 출력  
	LCD_PORT_DIR = 0xFF;  
 1c2:	8f ef       	ldi	r24, 0xFF	; 255
 1c4:	84 bb       	out	0x14, r24	; 20
	//초기 값  
	LCD_PORT = 0x00; 
 1c6:	15 ba       	out	0x15, r1	; 21
 1c8:	08 95       	ret

000001ca <init_LCD>:
 1ca:	2f ef       	ldi	r18, 0xFF	; 255
 1cc:	83 ef       	ldi	r24, 0xF3	; 243
 1ce:	91 e0       	ldi	r25, 0x01	; 1
 1d0:	21 50       	subi	r18, 0x01	; 1
 1d2:	80 40       	sbci	r24, 0x00	; 0
 1d4:	90 40       	sbci	r25, 0x00	; 0
 1d6:	e1 f7       	brne	.-8      	; 0x1d0 <init_LCD+0x6>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <init_LCD+0x10>
 1da:	00 00       	nop
} 
 // LCD초기화  
void init_LCD(void)  
{  
	_delay_ms(40);  
	LCD_PORT &= 0x0F;  
 1dc:	85 b3       	in	r24, 0x15	; 21
 1de:	8f 70       	andi	r24, 0x0F	; 15
 1e0:	85 bb       	out	0x15, r24	; 21
	LCD_PORT |= 0x30;  
 1e2:	85 b3       	in	r24, 0x15	; 21
 1e4:	80 63       	ori	r24, 0x30	; 48
 1e6:	85 bb       	out	0x15, r24	; 21
	ToggleEpinOfLCD();  
 1e8:	83 df       	rcall	.-250    	; 0xf0 <ToggleEpinOfLCD>
 1ea:	8f eb       	ldi	r24, 0xBF	; 191
 1ec:	9d e5       	ldi	r25, 0x5D	; 93
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <init_LCD+0x24>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <init_LCD+0x2a>
 1f4:	00 00       	nop
	// 펄스  
	_delay_ms(6);  
	LCD_PORT &= 0x0F;  
 1f6:	85 b3       	in	r24, 0x15	; 21
 1f8:	8f 70       	andi	r24, 0x0F	; 15
 1fa:	85 bb       	out	0x15, r24	; 21
	LCD_PORT |= 0x30;  
 1fc:	85 b3       	in	r24, 0x15	; 21
 1fe:	80 63       	ori	r24, 0x30	; 48
	ToggleEpinOfLCD();  
 200:	85 bb       	out	0x15, r24	; 21
 202:	76 df       	rcall	.-276    	; 0xf0 <ToggleEpinOfLCD>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 204:	8f ea       	ldi	r24, 0xAF	; 175
 206:	94 e0       	ldi	r25, 0x04	; 4
 208:	01 97       	sbiw	r24, 0x01	; 1
 20a:	f1 f7       	brne	.-4      	; 0x208 <init_LCD+0x3e>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <init_LCD+0x44>
 20e:	00 00       	nop
	// 펄스  
	_delay_us(300);  
	LCD_PORT &= 0x0F;  
 210:	85 b3       	in	r24, 0x15	; 21
 212:	8f 70       	andi	r24, 0x0F	; 15
 214:	85 bb       	out	0x15, r24	; 21
	LCD_PORT |= 0x30;  
 216:	85 b3       	in	r24, 0x15	; 21
 218:	80 63       	ori	r24, 0x30	; 48
	ToggleEpinOfLCD();  
 21a:	85 bb       	out	0x15, r24	; 21
 21c:	69 df       	rcall	.-302    	; 0xf0 <ToggleEpinOfLCD>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21e:	8f e3       	ldi	r24, 0x3F	; 63
 220:	9f e1       	ldi	r25, 0x1F	; 31
 222:	01 97       	sbiw	r24, 0x01	; 1
 224:	f1 f7       	brne	.-4      	; 0x222 <init_LCD+0x58>
 226:	00 c0       	rjmp	.+0      	; 0x228 <init_LCD+0x5e>
 228:	00 00       	nop
	// 펄스  
	_delay_ms(2);  
	LCD_PORT &= 0x0F;  
 22a:	85 b3       	in	r24, 0x15	; 21
 22c:	8f 70       	andi	r24, 0x0F	; 15
 22e:	85 bb       	out	0x15, r24	; 21
	LCD_PORT |= 0x20;  
 230:	85 b3       	in	r24, 0x15	; 21
 232:	80 62       	ori	r24, 0x20	; 32
	ToggleEpinOfLCD();  
 234:	85 bb       	out	0x15, r24	; 21
 236:	5c df       	rcall	.-328    	; 0xf0 <ToggleEpinOfLCD>
 238:	8f e3       	ldi	r24, 0x3F	; 63
 23a:	9f e1       	ldi	r25, 0x1F	; 31
 23c:	01 97       	sbiw	r24, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <init_LCD+0x72>
 240:	00 c0       	rjmp	.+0      	; 0x242 <init_LCD+0x78>
	// 펄스  
	_delay_ms(2);  
	instruction_out(0x28);  
 242:	00 00       	nop
 244:	88 e2       	ldi	r24, 0x28	; 40
	instruction_out(0x0C);  
 246:	67 df       	rcall	.-306    	; 0x116 <instruction_out>
 248:	8c e0       	ldi	r24, 0x0C	; 12
	instruction_out(0x01);  
 24a:	65 df       	rcall	.-310    	; 0x116 <instruction_out>
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	63 df       	rcall	.-314    	; 0x116 <instruction_out>
	instruction_out(0x06); 
 250:	86 e0       	ldi	r24, 0x06	; 6
 252:	61 cf       	rjmp	.-318    	; 0x116 <instruction_out>
 254:	08 95       	ret

00000256 <LCD_gotoxy>:
 256:	61 11       	cpse	r22, r1
	uint8_t address=(0x40 *row)+col;
	uint8_t command =0x80+address;

	instruction_out(command);
*/
	if(col==0) instruction_out(0x80);
 258:	03 c0       	rjmp	.+6      	; 0x260 <LCD_gotoxy+0xa>
 25a:	80 e8       	ldi	r24, 0x80	; 128
 25c:	5c cf       	rjmp	.-328    	; 0x116 <instruction_out>
 25e:	08 95       	ret
	else instruction_out(0xc0);
 260:	80 ec       	ldi	r24, 0xC0	; 192
 262:	59 cf       	rjmp	.-334    	; 0x116 <instruction_out>
 264:	08 95       	ret

00000266 <ADC_init>:
}
void ADC_init(unsigned char channel)
{
	ADMUX =(1<<REFS0);
 266:	90 e4       	ldi	r25, 0x40	; 64
 268:	97 b9       	out	0x07, r25	; 7
	ADCSRA |=0x07;
 26a:	96 b1       	in	r25, 0x06	; 6
 26c:	97 60       	ori	r25, 0x07	; 7
 26e:	96 b9       	out	0x06, r25	; 6
	ADCSRA |=(1<<ADEN);
 270:	96 b1       	in	r25, 0x06	; 6
 272:	90 68       	ori	r25, 0x80	; 128
 274:	96 b9       	out	0x06, r25	; 6
	ADCSRA |= (1<<ADFR);
 276:	96 b1       	in	r25, 0x06	; 6
 278:	90 62       	ori	r25, 0x20	; 32
 27a:	96 b9       	out	0x06, r25	; 6
	ADMUX=((ADMUX & 0xE0)|channel);
 27c:	97 b1       	in	r25, 0x07	; 7
 27e:	90 7e       	andi	r25, 0xE0	; 224
 280:	89 2b       	or	r24, r25
 282:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);
 284:	86 b1       	in	r24, 0x06	; 6
 286:	80 64       	ori	r24, 0x40	; 64
 288:	86 b9       	out	0x06, r24	; 6
 28a:	08 95       	ret

0000028c <read_ADC>:
}
int read_ADC(void)
{
	while(!(ADCSRA & (1<<ADIF)));
 28c:	34 9b       	sbis	0x06, 4	; 6
 28e:	fe cf       	rjmp	.-4      	; 0x28c <read_ADC>
	return ADC;
 290:	84 b1       	in	r24, 0x04	; 4
 292:	95 b1       	in	r25, 0x05	; 5
}
 294:	08 95       	ret

00000296 <init_Timer>:
void init_Timer(void)
{
	TCCR1A |= (1<<WGM11);
 296:	8f b5       	in	r24, 0x2f	; 47
 298:	82 60       	ori	r24, 0x02	; 2
 29a:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |=(1<<WGM12)|(1<<WGM13);
 29c:	8e b5       	in	r24, 0x2e	; 46
 29e:	88 61       	ori	r24, 0x18	; 24
 2a0:	8e bd       	out	0x2e, r24	; 46
	TCCR1A  |=(1<<COM1A1);
 2a2:	8f b5       	in	r24, 0x2f	; 47
 2a4:	80 68       	ori	r24, 0x80	; 128
 2a6:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |=(1<<CS11);
 2a8:	8e b5       	in	r24, 0x2e	; 46
 2aa:	82 60       	ori	r24, 0x02	; 2
 2ac:	8e bd       	out	0x2e, r24	; 46
	ICR1=39999;
 2ae:	8f e3       	ldi	r24, 0x3F	; 63
 2b0:	9c e9       	ldi	r25, 0x9C	; 156
 2b2:	97 bd       	out	0x27, r25	; 39
 2b4:	86 bd       	out	0x26, r24	; 38
 2b6:	08 95       	ret

000002b8 <main>:
}
int main(void)
{
 2b8:	cf 93       	push	r28
 2ba:	df 93       	push	r29
 2bc:	cd b7       	in	r28, 0x3d	; 61
 2be:	de b7       	in	r29, 0x3e	; 62
 2c0:	c0 55       	subi	r28, 0x50	; 80
 2c2:	d1 09       	sbc	r29, r1
 2c4:	0f b6       	in	r0, 0x3f	; 63
 2c6:	f8 94       	cli
 2c8:	de bf       	out	0x3e, r29	; 62
 2ca:	0f be       	out	0x3f, r0	; 63
 2cc:	cd bf       	out	0x3d, r28	; 61
	int read;
	int rc_val;
	char data[80];

	DDRA=0xff; PORTA=0xff;
 2ce:	8f ef       	ldi	r24, 0xFF	; 255
 2d0:	8a bb       	out	0x1a, r24	; 26
 2d2:	8b bb       	out	0x1b, r24	; 27
	DDRB |=(1<<PORTB5); //R/C servo
 2d4:	97 b3       	in	r25, 0x17	; 23
 2d6:	90 62       	ori	r25, 0x20	; 32
 2d8:	97 bb       	out	0x17, r25	; 23
	DDRC=0xff; PORTC=0xff;
 2da:	84 bb       	out	0x14, r24	; 20
 2dc:	85 bb       	out	0x15, r24	; 21
	DDRD=0x00; PORTD=0xff;
 2de:	11 ba       	out	0x11, r1	; 17
 2e0:	82 bb       	out	0x12, r24	; 18
	DDRF=0xff; PORTF=0xff;
 2e2:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 2e6:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>

	EIMSK =0x03;
 2ea:	83 e0       	ldi	r24, 0x03	; 3
 2ec:	89 bf       	out	0x39, r24	; 57
	EICRA =0x0a;
 2ee:	8a e0       	ldi	r24, 0x0A	; 10
 2f0:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>

	ADC_init(0);
 2f4:	80 e0       	ldi	r24, 0x00	; 0
 2f6:	b7 df       	rcall	.-146    	; 0x266 <ADC_init>
	init_Timer();
 2f8:	ce df       	rcall	.-100    	; 0x296 <init_Timer>
 2fa:	2f ef       	ldi	r18, 0xFF	; 255
 2fc:	81 ee       	ldi	r24, 0xE1	; 225
 2fe:	94 e0       	ldi	r25, 0x04	; 4
 300:	21 50       	subi	r18, 0x01	; 1
 302:	80 40       	sbci	r24, 0x00	; 0
 304:	90 40       	sbci	r25, 0x00	; 0
 306:	e1 f7       	brne	.-8      	; 0x300 <main+0x48>
 308:	00 c0       	rjmp	.+0      	; 0x30a <main+0x52>
 30a:	00 00       	nop
	_delay_ms(100); 
	// 포트 초기화  
	Port_Init();  
 30c:	5a df       	rcall	.-332    	; 0x1c2 <Port_Init>
 30e:	2f ef       	ldi	r18, 0xFF	; 255
 310:	89 e6       	ldi	r24, 0x69	; 105
 312:	98 e1       	ldi	r25, 0x18	; 24
 314:	21 50       	subi	r18, 0x01	; 1
 316:	80 40       	sbci	r24, 0x00	; 0
 318:	90 40       	sbci	r25, 0x00	; 0
 31a:	e1 f7       	brne	.-8      	; 0x314 <main+0x5c>
 31c:	00 c0       	rjmp	.+0      	; 0x31e <main+0x66>
 31e:	00 00       	nop
	_delay_ms(500);  
	// LCD 초기화  
	init_LCD();  
 320:	54 df       	rcall	.-344    	; 0x1ca <init_LCD>
	// 출력문자열  
	LCD_gotoxy(0,0); 
 322:	60 e0       	ldi	r22, 0x00	; 0
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	97 df       	rcall	.-210    	; 0x256 <LCD_gotoxy>
	string_out("LCD Test Mode!");  
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	32 df       	rcall	.-412    	; 0x192 <string_out>
	LCD_gotoxy(0,1); 
 32e:	61 e0       	ldi	r22, 0x01	; 1
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	91 df       	rcall	.-222    	; 0x256 <LCD_gotoxy>
 334:	8f e0       	ldi	r24, 0x0F	; 15
	string_out("Now Init--"); 
 336:	91 e0       	ldi	r25, 0x01	; 1
 338:	2c df       	rcall	.-424    	; 0x192 <string_out>
 33a:	2f ef       	ldi	r18, 0xFF	; 255
 33c:	83 ed       	ldi	r24, 0xD3	; 211
 33e:	90 e3       	ldi	r25, 0x30	; 48
 340:	21 50       	subi	r18, 0x01	; 1
 342:	80 40       	sbci	r24, 0x00	; 0
 344:	90 40       	sbci	r25, 0x00	; 0
 346:	e1 f7       	brne	.-8      	; 0x340 <main+0x88>
 348:	00 c0       	rjmp	.+0      	; 0x34a <main+0x92>
 34a:	00 00       	nop
 34c:	78 94       	sei
	_delay_ms(1000);

    sei();
 34e:	9e df       	rcall	.-196    	; 0x28c <read_ADC>
    while (1) 
    {
     read=read_ADC();
 350:	8c 01       	movw	r16, r24
     rc_val=(int)read+1000;
 352:	08 51       	subi	r16, 0x18	; 24
 354:	1c 4f       	sbci	r17, 0xFC	; 252
 356:	1b bd       	out	0x2b, r17	; 43
     OCR1A =(rc_val);
 358:	0a bd       	out	0x2a, r16	; 42
 35a:	61 e0       	ldi	r22, 0x01	; 1
     LCD_gotoxy(0,1);
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	7b df       	rcall	.-266    	; 0x256 <LCD_gotoxy>
 360:	1f 93       	push	r17
 362:	0f 93       	push	r16
     sprintf(data,"AD Val=%5d",rc_val);
 364:	8a e1       	ldi	r24, 0x1A	; 26
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	9f 93       	push	r25
 36a:	8f 93       	push	r24
 36c:	8e 01       	movw	r16, r28
 36e:	0f 5f       	subi	r16, 0xFF	; 255
 370:	1f 4f       	sbci	r17, 0xFF	; 255
 372:	1f 93       	push	r17
 374:	0f 93       	push	r16
 376:	0f d0       	rcall	.+30     	; 0x396 <sprintf>
 378:	c8 01       	movw	r24, r16
     string_out(data);
 37a:	0b df       	rcall	.-490    	; 0x192 <string_out>
 37c:	8f e3       	ldi	r24, 0x3F	; 63
 37e:	9c e9       	ldi	r25, 0x9C	; 156
 380:	01 97       	sbiw	r24, 0x01	; 1
 382:	f1 f7       	brne	.-4      	; 0x380 <main+0xc8>
 384:	00 c0       	rjmp	.+0      	; 0x386 <main+0xce>
 386:	00 00       	nop
 388:	0f 90       	pop	r0
 38a:	0f 90       	pop	r0
 38c:	0f 90       	pop	r0
 38e:	0f 90       	pop	r0
 390:	0f 90       	pop	r0
 392:	0f 90       	pop	r0
 394:	dc cf       	rjmp	.-72     	; 0x34e <main+0x96>

00000396 <sprintf>:
 396:	0f 93       	push	r16
 398:	1f 93       	push	r17
 39a:	cf 93       	push	r28
 39c:	df 93       	push	r29
 39e:	cd b7       	in	r28, 0x3d	; 61
 3a0:	de b7       	in	r29, 0x3e	; 62
 3a2:	2e 97       	sbiw	r28, 0x0e	; 14
 3a4:	0f b6       	in	r0, 0x3f	; 63
 3a6:	f8 94       	cli
 3a8:	de bf       	out	0x3e, r29	; 62
 3aa:	0f be       	out	0x3f, r0	; 63
 3ac:	cd bf       	out	0x3d, r28	; 61
 3ae:	0d 89       	ldd	r16, Y+21	; 0x15
 3b0:	1e 89       	ldd	r17, Y+22	; 0x16
 3b2:	86 e0       	ldi	r24, 0x06	; 6
 3b4:	8c 83       	std	Y+4, r24	; 0x04
 3b6:	1a 83       	std	Y+2, r17	; 0x02
 3b8:	09 83       	std	Y+1, r16	; 0x01
 3ba:	8f ef       	ldi	r24, 0xFF	; 255
 3bc:	9f e7       	ldi	r25, 0x7F	; 127
 3be:	9e 83       	std	Y+6, r25	; 0x06
 3c0:	8d 83       	std	Y+5, r24	; 0x05
 3c2:	ae 01       	movw	r20, r28
 3c4:	47 5e       	subi	r20, 0xE7	; 231
 3c6:	5f 4f       	sbci	r21, 0xFF	; 255
 3c8:	6f 89       	ldd	r22, Y+23	; 0x17
 3ca:	78 8d       	ldd	r23, Y+24	; 0x18
 3cc:	ce 01       	movw	r24, r28
 3ce:	01 96       	adiw	r24, 0x01	; 1
 3d0:	10 d0       	rcall	.+32     	; 0x3f2 <vfprintf>
 3d2:	ef 81       	ldd	r30, Y+7	; 0x07
 3d4:	f8 85       	ldd	r31, Y+8	; 0x08
 3d6:	e0 0f       	add	r30, r16
 3d8:	f1 1f       	adc	r31, r17
 3da:	10 82       	st	Z, r1
 3dc:	2e 96       	adiw	r28, 0x0e	; 14
 3de:	0f b6       	in	r0, 0x3f	; 63
 3e0:	f8 94       	cli
 3e2:	de bf       	out	0x3e, r29	; 62
 3e4:	0f be       	out	0x3f, r0	; 63
 3e6:	cd bf       	out	0x3d, r28	; 61
 3e8:	df 91       	pop	r29
 3ea:	cf 91       	pop	r28
 3ec:	1f 91       	pop	r17
 3ee:	0f 91       	pop	r16
 3f0:	08 95       	ret

000003f2 <vfprintf>:
 3f2:	2f 92       	push	r2
 3f4:	3f 92       	push	r3
 3f6:	4f 92       	push	r4
 3f8:	5f 92       	push	r5
 3fa:	6f 92       	push	r6
 3fc:	7f 92       	push	r7
 3fe:	8f 92       	push	r8
 400:	9f 92       	push	r9
 402:	af 92       	push	r10
 404:	bf 92       	push	r11
 406:	cf 92       	push	r12
 408:	df 92       	push	r13
 40a:	ef 92       	push	r14
 40c:	ff 92       	push	r15
 40e:	0f 93       	push	r16
 410:	1f 93       	push	r17
 412:	cf 93       	push	r28
 414:	df 93       	push	r29
 416:	cd b7       	in	r28, 0x3d	; 61
 418:	de b7       	in	r29, 0x3e	; 62
 41a:	2b 97       	sbiw	r28, 0x0b	; 11
 41c:	0f b6       	in	r0, 0x3f	; 63
 41e:	f8 94       	cli
 420:	de bf       	out	0x3e, r29	; 62
 422:	0f be       	out	0x3f, r0	; 63
 424:	cd bf       	out	0x3d, r28	; 61
 426:	6c 01       	movw	r12, r24
 428:	7b 01       	movw	r14, r22
 42a:	8a 01       	movw	r16, r20
 42c:	fc 01       	movw	r30, r24
 42e:	17 82       	std	Z+7, r1	; 0x07
 430:	16 82       	std	Z+6, r1	; 0x06
 432:	83 81       	ldd	r24, Z+3	; 0x03
 434:	81 ff       	sbrs	r24, 1
 436:	bf c1       	rjmp	.+894    	; 0x7b6 <__LOCK_REGION_LENGTH__+0x3b6>
 438:	ce 01       	movw	r24, r28
 43a:	01 96       	adiw	r24, 0x01	; 1
 43c:	3c 01       	movw	r6, r24
 43e:	f6 01       	movw	r30, r12
 440:	93 81       	ldd	r25, Z+3	; 0x03
 442:	f7 01       	movw	r30, r14
 444:	93 fd       	sbrc	r25, 3
 446:	85 91       	lpm	r24, Z+
 448:	93 ff       	sbrs	r25, 3
 44a:	81 91       	ld	r24, Z+
 44c:	7f 01       	movw	r14, r30
 44e:	88 23       	and	r24, r24
 450:	09 f4       	brne	.+2      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 452:	ad c1       	rjmp	.+858    	; 0x7ae <__LOCK_REGION_LENGTH__+0x3ae>
 454:	85 32       	cpi	r24, 0x25	; 37
 456:	39 f4       	brne	.+14     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 458:	93 fd       	sbrc	r25, 3
 45a:	85 91       	lpm	r24, Z+
 45c:	93 ff       	sbrs	r25, 3
 45e:	81 91       	ld	r24, Z+
 460:	7f 01       	movw	r14, r30
 462:	85 32       	cpi	r24, 0x25	; 37
 464:	21 f4       	brne	.+8      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 466:	b6 01       	movw	r22, r12
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	d6 d1       	rcall	.+940    	; 0x818 <fputc>
 46c:	e8 cf       	rjmp	.-48     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 46e:	91 2c       	mov	r9, r1
 470:	21 2c       	mov	r2, r1
 472:	31 2c       	mov	r3, r1
 474:	ff e1       	ldi	r31, 0x1F	; 31
 476:	f3 15       	cp	r31, r3
 478:	d8 f0       	brcs	.+54     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 47a:	8b 32       	cpi	r24, 0x2B	; 43
 47c:	79 f0       	breq	.+30     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 47e:	38 f4       	brcc	.+14     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 480:	80 32       	cpi	r24, 0x20	; 32
 482:	79 f0       	breq	.+30     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 484:	83 32       	cpi	r24, 0x23	; 35
 486:	a1 f4       	brne	.+40     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 488:	23 2d       	mov	r18, r3
 48a:	20 61       	ori	r18, 0x10	; 16
 48c:	1d c0       	rjmp	.+58     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 48e:	8d 32       	cpi	r24, 0x2D	; 45
 490:	61 f0       	breq	.+24     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 492:	80 33       	cpi	r24, 0x30	; 48
 494:	69 f4       	brne	.+26     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 496:	23 2d       	mov	r18, r3
 498:	21 60       	ori	r18, 0x01	; 1
 49a:	16 c0       	rjmp	.+44     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 49c:	83 2d       	mov	r24, r3
 49e:	82 60       	ori	r24, 0x02	; 2
 4a0:	38 2e       	mov	r3, r24
 4a2:	e3 2d       	mov	r30, r3
 4a4:	e4 60       	ori	r30, 0x04	; 4
 4a6:	3e 2e       	mov	r3, r30
 4a8:	2a c0       	rjmp	.+84     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4aa:	f3 2d       	mov	r31, r3
 4ac:	f8 60       	ori	r31, 0x08	; 8
 4ae:	1d c0       	rjmp	.+58     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4b0:	37 fc       	sbrc	r3, 7
 4b2:	2d c0       	rjmp	.+90     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4b4:	20 ed       	ldi	r18, 0xD0	; 208
 4b6:	28 0f       	add	r18, r24
 4b8:	2a 30       	cpi	r18, 0x0A	; 10
 4ba:	40 f0       	brcs	.+16     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4bc:	8e 32       	cpi	r24, 0x2E	; 46
 4be:	b9 f4       	brne	.+46     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4c0:	36 fc       	sbrc	r3, 6
 4c2:	75 c1       	rjmp	.+746    	; 0x7ae <__LOCK_REGION_LENGTH__+0x3ae>
 4c4:	23 2d       	mov	r18, r3
 4c6:	20 64       	ori	r18, 0x40	; 64
 4c8:	32 2e       	mov	r3, r18
 4ca:	19 c0       	rjmp	.+50     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4cc:	36 fe       	sbrs	r3, 6
 4ce:	06 c0       	rjmp	.+12     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d0:	8a e0       	ldi	r24, 0x0A	; 10
 4d2:	98 9e       	mul	r9, r24
 4d4:	20 0d       	add	r18, r0
 4d6:	11 24       	eor	r1, r1
 4d8:	92 2e       	mov	r9, r18
 4da:	11 c0       	rjmp	.+34     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4dc:	ea e0       	ldi	r30, 0x0A	; 10
 4de:	2e 9e       	mul	r2, r30
 4e0:	20 0d       	add	r18, r0
 4e2:	11 24       	eor	r1, r1
 4e4:	22 2e       	mov	r2, r18
 4e6:	f3 2d       	mov	r31, r3
 4e8:	f0 62       	ori	r31, 0x20	; 32
 4ea:	3f 2e       	mov	r3, r31
 4ec:	08 c0       	rjmp	.+16     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4ee:	8c 36       	cpi	r24, 0x6C	; 108
 4f0:	21 f4       	brne	.+8      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f2:	83 2d       	mov	r24, r3
 4f4:	80 68       	ori	r24, 0x80	; 128
 4f6:	38 2e       	mov	r3, r24
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4fa:	88 36       	cpi	r24, 0x68	; 104
 4fc:	41 f4       	brne	.+16     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4fe:	f7 01       	movw	r30, r14
 500:	93 fd       	sbrc	r25, 3
 502:	85 91       	lpm	r24, Z+
 504:	93 ff       	sbrs	r25, 3
 506:	81 91       	ld	r24, Z+
 508:	7f 01       	movw	r14, r30
 50a:	81 11       	cpse	r24, r1
 50c:	b3 cf       	rjmp	.-154    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 50e:	98 2f       	mov	r25, r24
 510:	9f 7d       	andi	r25, 0xDF	; 223
 512:	95 54       	subi	r25, 0x45	; 69
 514:	93 30       	cpi	r25, 0x03	; 3
 516:	28 f4       	brcc	.+10     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 518:	0c 5f       	subi	r16, 0xFC	; 252
 51a:	1f 4f       	sbci	r17, 0xFF	; 255
 51c:	9f e3       	ldi	r25, 0x3F	; 63
 51e:	99 83       	std	Y+1, r25	; 0x01
 520:	0d c0       	rjmp	.+26     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 522:	83 36       	cpi	r24, 0x63	; 99
 524:	31 f0       	breq	.+12     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 526:	83 37       	cpi	r24, 0x73	; 115
 528:	71 f0       	breq	.+28     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 52a:	83 35       	cpi	r24, 0x53	; 83
 52c:	09 f0       	breq	.+2      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52e:	55 c0       	rjmp	.+170    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 530:	20 c0       	rjmp	.+64     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 532:	f8 01       	movw	r30, r16
 534:	80 81       	ld	r24, Z
 536:	89 83       	std	Y+1, r24	; 0x01
 538:	0e 5f       	subi	r16, 0xFE	; 254
 53a:	1f 4f       	sbci	r17, 0xFF	; 255
 53c:	88 24       	eor	r8, r8
 53e:	83 94       	inc	r8
 540:	91 2c       	mov	r9, r1
 542:	53 01       	movw	r10, r6
 544:	12 c0       	rjmp	.+36     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 546:	28 01       	movw	r4, r16
 548:	f2 e0       	ldi	r31, 0x02	; 2
 54a:	4f 0e       	add	r4, r31
 54c:	51 1c       	adc	r5, r1
 54e:	f8 01       	movw	r30, r16
 550:	a0 80       	ld	r10, Z
 552:	b1 80       	ldd	r11, Z+1	; 0x01
 554:	36 fe       	sbrs	r3, 6
 556:	03 c0       	rjmp	.+6      	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 558:	69 2d       	mov	r22, r9
 55a:	70 e0       	ldi	r23, 0x00	; 0
 55c:	02 c0       	rjmp	.+4      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 55e:	6f ef       	ldi	r22, 0xFF	; 255
 560:	7f ef       	ldi	r23, 0xFF	; 255
 562:	c5 01       	movw	r24, r10
 564:	4e d1       	rcall	.+668    	; 0x802 <strnlen>
 566:	4c 01       	movw	r8, r24
 568:	82 01       	movw	r16, r4
 56a:	f3 2d       	mov	r31, r3
 56c:	ff 77       	andi	r31, 0x7F	; 127
 56e:	3f 2e       	mov	r3, r31
 570:	15 c0       	rjmp	.+42     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 572:	28 01       	movw	r4, r16
 574:	22 e0       	ldi	r18, 0x02	; 2
 576:	42 0e       	add	r4, r18
 578:	51 1c       	adc	r5, r1
 57a:	f8 01       	movw	r30, r16
 57c:	a0 80       	ld	r10, Z
 57e:	b1 80       	ldd	r11, Z+1	; 0x01
 580:	36 fe       	sbrs	r3, 6
 582:	03 c0       	rjmp	.+6      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 584:	69 2d       	mov	r22, r9
 586:	70 e0       	ldi	r23, 0x00	; 0
 588:	02 c0       	rjmp	.+4      	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 58a:	6f ef       	ldi	r22, 0xFF	; 255
 58c:	7f ef       	ldi	r23, 0xFF	; 255
 58e:	c5 01       	movw	r24, r10
 590:	2d d1       	rcall	.+602    	; 0x7ec <strnlen_P>
 592:	4c 01       	movw	r8, r24
 594:	f3 2d       	mov	r31, r3
 596:	f0 68       	ori	r31, 0x80	; 128
 598:	3f 2e       	mov	r3, r31
 59a:	82 01       	movw	r16, r4
 59c:	33 fc       	sbrc	r3, 3
 59e:	19 c0       	rjmp	.+50     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5a0:	82 2d       	mov	r24, r2
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	88 16       	cp	r8, r24
 5a6:	99 06       	cpc	r9, r25
 5a8:	a0 f4       	brcc	.+40     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5aa:	b6 01       	movw	r22, r12
 5ac:	80 e2       	ldi	r24, 0x20	; 32
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	33 d1       	rcall	.+614    	; 0x818 <fputc>
 5b2:	2a 94       	dec	r2
 5b4:	f5 cf       	rjmp	.-22     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 5b6:	f5 01       	movw	r30, r10
 5b8:	37 fc       	sbrc	r3, 7
 5ba:	85 91       	lpm	r24, Z+
 5bc:	37 fe       	sbrs	r3, 7
 5be:	81 91       	ld	r24, Z+
 5c0:	5f 01       	movw	r10, r30
 5c2:	b6 01       	movw	r22, r12
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	28 d1       	rcall	.+592    	; 0x818 <fputc>
 5c8:	21 10       	cpse	r2, r1
 5ca:	2a 94       	dec	r2
 5cc:	21 e0       	ldi	r18, 0x01	; 1
 5ce:	82 1a       	sub	r8, r18
 5d0:	91 08       	sbc	r9, r1
 5d2:	81 14       	cp	r8, r1
 5d4:	91 04       	cpc	r9, r1
 5d6:	79 f7       	brne	.-34     	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5d8:	e1 c0       	rjmp	.+450    	; 0x79c <__LOCK_REGION_LENGTH__+0x39c>
 5da:	84 36       	cpi	r24, 0x64	; 100
 5dc:	11 f0       	breq	.+4      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5de:	89 36       	cpi	r24, 0x69	; 105
 5e0:	39 f5       	brne	.+78     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 5e2:	f8 01       	movw	r30, r16
 5e4:	37 fe       	sbrs	r3, 7
 5e6:	07 c0       	rjmp	.+14     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5e8:	60 81       	ld	r22, Z
 5ea:	71 81       	ldd	r23, Z+1	; 0x01
 5ec:	82 81       	ldd	r24, Z+2	; 0x02
 5ee:	93 81       	ldd	r25, Z+3	; 0x03
 5f0:	0c 5f       	subi	r16, 0xFC	; 252
 5f2:	1f 4f       	sbci	r17, 0xFF	; 255
 5f4:	08 c0       	rjmp	.+16     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5f6:	60 81       	ld	r22, Z
 5f8:	71 81       	ldd	r23, Z+1	; 0x01
 5fa:	07 2e       	mov	r0, r23
 5fc:	00 0c       	add	r0, r0
 5fe:	88 0b       	sbc	r24, r24
 600:	99 0b       	sbc	r25, r25
 602:	0e 5f       	subi	r16, 0xFE	; 254
 604:	1f 4f       	sbci	r17, 0xFF	; 255
 606:	f3 2d       	mov	r31, r3
 608:	ff 76       	andi	r31, 0x6F	; 111
 60a:	3f 2e       	mov	r3, r31
 60c:	97 ff       	sbrs	r25, 7
 60e:	09 c0       	rjmp	.+18     	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 610:	90 95       	com	r25
 612:	80 95       	com	r24
 614:	70 95       	com	r23
 616:	61 95       	neg	r22
 618:	7f 4f       	sbci	r23, 0xFF	; 255
 61a:	8f 4f       	sbci	r24, 0xFF	; 255
 61c:	9f 4f       	sbci	r25, 0xFF	; 255
 61e:	f0 68       	ori	r31, 0x80	; 128
 620:	3f 2e       	mov	r3, r31
 622:	2a e0       	ldi	r18, 0x0A	; 10
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	a3 01       	movw	r20, r6
 628:	33 d1       	rcall	.+614    	; 0x890 <__ultoa_invert>
 62a:	88 2e       	mov	r8, r24
 62c:	86 18       	sub	r8, r6
 62e:	44 c0       	rjmp	.+136    	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 630:	85 37       	cpi	r24, 0x75	; 117
 632:	31 f4       	brne	.+12     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 634:	23 2d       	mov	r18, r3
 636:	2f 7e       	andi	r18, 0xEF	; 239
 638:	b2 2e       	mov	r11, r18
 63a:	2a e0       	ldi	r18, 0x0A	; 10
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	25 c0       	rjmp	.+74     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 640:	93 2d       	mov	r25, r3
 642:	99 7f       	andi	r25, 0xF9	; 249
 644:	b9 2e       	mov	r11, r25
 646:	8f 36       	cpi	r24, 0x6F	; 111
 648:	c1 f0       	breq	.+48     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 64a:	18 f4       	brcc	.+6      	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 64c:	88 35       	cpi	r24, 0x58	; 88
 64e:	79 f0       	breq	.+30     	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 650:	ae c0       	rjmp	.+348    	; 0x7ae <__LOCK_REGION_LENGTH__+0x3ae>
 652:	80 37       	cpi	r24, 0x70	; 112
 654:	19 f0       	breq	.+6      	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 656:	88 37       	cpi	r24, 0x78	; 120
 658:	21 f0       	breq	.+8      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 65a:	a9 c0       	rjmp	.+338    	; 0x7ae <__LOCK_REGION_LENGTH__+0x3ae>
 65c:	e9 2f       	mov	r30, r25
 65e:	e0 61       	ori	r30, 0x10	; 16
 660:	be 2e       	mov	r11, r30
 662:	b4 fe       	sbrs	r11, 4
 664:	0d c0       	rjmp	.+26     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 666:	fb 2d       	mov	r31, r11
 668:	f4 60       	ori	r31, 0x04	; 4
 66a:	bf 2e       	mov	r11, r31
 66c:	09 c0       	rjmp	.+18     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 66e:	34 fe       	sbrs	r3, 4
 670:	0a c0       	rjmp	.+20     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 672:	29 2f       	mov	r18, r25
 674:	26 60       	ori	r18, 0x06	; 6
 676:	b2 2e       	mov	r11, r18
 678:	06 c0       	rjmp	.+12     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 67a:	28 e0       	ldi	r18, 0x08	; 8
 67c:	30 e0       	ldi	r19, 0x00	; 0
 67e:	05 c0       	rjmp	.+10     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 680:	20 e1       	ldi	r18, 0x10	; 16
 682:	30 e0       	ldi	r19, 0x00	; 0
 684:	02 c0       	rjmp	.+4      	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 686:	20 e1       	ldi	r18, 0x10	; 16
 688:	32 e0       	ldi	r19, 0x02	; 2
 68a:	f8 01       	movw	r30, r16
 68c:	b7 fe       	sbrs	r11, 7
 68e:	07 c0       	rjmp	.+14     	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 690:	60 81       	ld	r22, Z
 692:	71 81       	ldd	r23, Z+1	; 0x01
 694:	82 81       	ldd	r24, Z+2	; 0x02
 696:	93 81       	ldd	r25, Z+3	; 0x03
 698:	0c 5f       	subi	r16, 0xFC	; 252
 69a:	1f 4f       	sbci	r17, 0xFF	; 255
 69c:	06 c0       	rjmp	.+12     	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 69e:	60 81       	ld	r22, Z
 6a0:	71 81       	ldd	r23, Z+1	; 0x01
 6a2:	80 e0       	ldi	r24, 0x00	; 0
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	0e 5f       	subi	r16, 0xFE	; 254
 6a8:	1f 4f       	sbci	r17, 0xFF	; 255
 6aa:	a3 01       	movw	r20, r6
 6ac:	f1 d0       	rcall	.+482    	; 0x890 <__ultoa_invert>
 6ae:	88 2e       	mov	r8, r24
 6b0:	86 18       	sub	r8, r6
 6b2:	fb 2d       	mov	r31, r11
 6b4:	ff 77       	andi	r31, 0x7F	; 127
 6b6:	3f 2e       	mov	r3, r31
 6b8:	36 fe       	sbrs	r3, 6
 6ba:	0d c0       	rjmp	.+26     	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 6bc:	23 2d       	mov	r18, r3
 6be:	2e 7f       	andi	r18, 0xFE	; 254
 6c0:	a2 2e       	mov	r10, r18
 6c2:	89 14       	cp	r8, r9
 6c4:	58 f4       	brcc	.+22     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6c6:	34 fe       	sbrs	r3, 4
 6c8:	0b c0       	rjmp	.+22     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6ca:	32 fc       	sbrc	r3, 2
 6cc:	09 c0       	rjmp	.+18     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6ce:	83 2d       	mov	r24, r3
 6d0:	8e 7e       	andi	r24, 0xEE	; 238
 6d2:	a8 2e       	mov	r10, r24
 6d4:	05 c0       	rjmp	.+10     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6d6:	b8 2c       	mov	r11, r8
 6d8:	a3 2c       	mov	r10, r3
 6da:	03 c0       	rjmp	.+6      	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6dc:	b8 2c       	mov	r11, r8
 6de:	01 c0       	rjmp	.+2      	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6e0:	b9 2c       	mov	r11, r9
 6e2:	a4 fe       	sbrs	r10, 4
 6e4:	0f c0       	rjmp	.+30     	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 6e6:	fe 01       	movw	r30, r28
 6e8:	e8 0d       	add	r30, r8
 6ea:	f1 1d       	adc	r31, r1
 6ec:	80 81       	ld	r24, Z
 6ee:	80 33       	cpi	r24, 0x30	; 48
 6f0:	21 f4       	brne	.+8      	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6f2:	9a 2d       	mov	r25, r10
 6f4:	99 7e       	andi	r25, 0xE9	; 233
 6f6:	a9 2e       	mov	r10, r25
 6f8:	09 c0       	rjmp	.+18     	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 6fa:	a2 fe       	sbrs	r10, 2
 6fc:	06 c0       	rjmp	.+12     	; 0x70a <__LOCK_REGION_LENGTH__+0x30a>
 6fe:	b3 94       	inc	r11
 700:	b3 94       	inc	r11
 702:	04 c0       	rjmp	.+8      	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 704:	8a 2d       	mov	r24, r10
 706:	86 78       	andi	r24, 0x86	; 134
 708:	09 f0       	breq	.+2      	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 70a:	b3 94       	inc	r11
 70c:	a3 fc       	sbrc	r10, 3
 70e:	10 c0       	rjmp	.+32     	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
 710:	a0 fe       	sbrs	r10, 0
 712:	06 c0       	rjmp	.+12     	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
 714:	b2 14       	cp	r11, r2
 716:	80 f4       	brcc	.+32     	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 718:	28 0c       	add	r2, r8
 71a:	92 2c       	mov	r9, r2
 71c:	9b 18       	sub	r9, r11
 71e:	0d c0       	rjmp	.+26     	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 720:	b2 14       	cp	r11, r2
 722:	58 f4       	brcc	.+22     	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 724:	b6 01       	movw	r22, r12
 726:	80 e2       	ldi	r24, 0x20	; 32
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	76 d0       	rcall	.+236    	; 0x818 <fputc>
 72c:	b3 94       	inc	r11
 72e:	f8 cf       	rjmp	.-16     	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
 730:	b2 14       	cp	r11, r2
 732:	18 f4       	brcc	.+6      	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 734:	2b 18       	sub	r2, r11
 736:	02 c0       	rjmp	.+4      	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 738:	98 2c       	mov	r9, r8
 73a:	21 2c       	mov	r2, r1
 73c:	a4 fe       	sbrs	r10, 4
 73e:	0f c0       	rjmp	.+30     	; 0x75e <__LOCK_REGION_LENGTH__+0x35e>
 740:	b6 01       	movw	r22, r12
 742:	80 e3       	ldi	r24, 0x30	; 48
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	68 d0       	rcall	.+208    	; 0x818 <fputc>
 748:	a2 fe       	sbrs	r10, 2
 74a:	16 c0       	rjmp	.+44     	; 0x778 <__LOCK_REGION_LENGTH__+0x378>
 74c:	a1 fc       	sbrc	r10, 1
 74e:	03 c0       	rjmp	.+6      	; 0x756 <__LOCK_REGION_LENGTH__+0x356>
 750:	88 e7       	ldi	r24, 0x78	; 120
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	02 c0       	rjmp	.+4      	; 0x75a <__LOCK_REGION_LENGTH__+0x35a>
 756:	88 e5       	ldi	r24, 0x58	; 88
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	b6 01       	movw	r22, r12
 75c:	0c c0       	rjmp	.+24     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
 75e:	8a 2d       	mov	r24, r10
 760:	86 78       	andi	r24, 0x86	; 134
 762:	51 f0       	breq	.+20     	; 0x778 <__LOCK_REGION_LENGTH__+0x378>
 764:	a1 fe       	sbrs	r10, 1
 766:	02 c0       	rjmp	.+4      	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 768:	8b e2       	ldi	r24, 0x2B	; 43
 76a:	01 c0       	rjmp	.+2      	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 76c:	80 e2       	ldi	r24, 0x20	; 32
 76e:	a7 fc       	sbrc	r10, 7
 770:	8d e2       	ldi	r24, 0x2D	; 45
 772:	b6 01       	movw	r22, r12
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	50 d0       	rcall	.+160    	; 0x818 <fputc>
 778:	89 14       	cp	r8, r9
 77a:	30 f4       	brcc	.+12     	; 0x788 <__LOCK_REGION_LENGTH__+0x388>
 77c:	b6 01       	movw	r22, r12
 77e:	80 e3       	ldi	r24, 0x30	; 48
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	4a d0       	rcall	.+148    	; 0x818 <fputc>
 784:	9a 94       	dec	r9
 786:	f8 cf       	rjmp	.-16     	; 0x778 <__LOCK_REGION_LENGTH__+0x378>
 788:	8a 94       	dec	r8
 78a:	f3 01       	movw	r30, r6
 78c:	e8 0d       	add	r30, r8
 78e:	f1 1d       	adc	r31, r1
 790:	80 81       	ld	r24, Z
 792:	b6 01       	movw	r22, r12
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	40 d0       	rcall	.+128    	; 0x818 <fputc>
 798:	81 10       	cpse	r8, r1
 79a:	f6 cf       	rjmp	.-20     	; 0x788 <__LOCK_REGION_LENGTH__+0x388>
 79c:	22 20       	and	r2, r2
 79e:	09 f4       	brne	.+2      	; 0x7a2 <__LOCK_REGION_LENGTH__+0x3a2>
 7a0:	4e ce       	rjmp	.-868    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 7a2:	b6 01       	movw	r22, r12
 7a4:	80 e2       	ldi	r24, 0x20	; 32
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	37 d0       	rcall	.+110    	; 0x818 <fputc>
 7aa:	2a 94       	dec	r2
 7ac:	f7 cf       	rjmp	.-18     	; 0x79c <__LOCK_REGION_LENGTH__+0x39c>
 7ae:	f6 01       	movw	r30, r12
 7b0:	86 81       	ldd	r24, Z+6	; 0x06
 7b2:	97 81       	ldd	r25, Z+7	; 0x07
 7b4:	02 c0       	rjmp	.+4      	; 0x7ba <__LOCK_REGION_LENGTH__+0x3ba>
 7b6:	8f ef       	ldi	r24, 0xFF	; 255
 7b8:	9f ef       	ldi	r25, 0xFF	; 255
 7ba:	2b 96       	adiw	r28, 0x0b	; 11
 7bc:	0f b6       	in	r0, 0x3f	; 63
 7be:	f8 94       	cli
 7c0:	de bf       	out	0x3e, r29	; 62
 7c2:	0f be       	out	0x3f, r0	; 63
 7c4:	cd bf       	out	0x3d, r28	; 61
 7c6:	df 91       	pop	r29
 7c8:	cf 91       	pop	r28
 7ca:	1f 91       	pop	r17
 7cc:	0f 91       	pop	r16
 7ce:	ff 90       	pop	r15
 7d0:	ef 90       	pop	r14
 7d2:	df 90       	pop	r13
 7d4:	cf 90       	pop	r12
 7d6:	bf 90       	pop	r11
 7d8:	af 90       	pop	r10
 7da:	9f 90       	pop	r9
 7dc:	8f 90       	pop	r8
 7de:	7f 90       	pop	r7
 7e0:	6f 90       	pop	r6
 7e2:	5f 90       	pop	r5
 7e4:	4f 90       	pop	r4
 7e6:	3f 90       	pop	r3
 7e8:	2f 90       	pop	r2
 7ea:	08 95       	ret

000007ec <strnlen_P>:
 7ec:	fc 01       	movw	r30, r24
 7ee:	05 90       	lpm	r0, Z+
 7f0:	61 50       	subi	r22, 0x01	; 1
 7f2:	70 40       	sbci	r23, 0x00	; 0
 7f4:	01 10       	cpse	r0, r1
 7f6:	d8 f7       	brcc	.-10     	; 0x7ee <strnlen_P+0x2>
 7f8:	80 95       	com	r24
 7fa:	90 95       	com	r25
 7fc:	8e 0f       	add	r24, r30
 7fe:	9f 1f       	adc	r25, r31
 800:	08 95       	ret

00000802 <strnlen>:
 802:	fc 01       	movw	r30, r24
 804:	61 50       	subi	r22, 0x01	; 1
 806:	70 40       	sbci	r23, 0x00	; 0
 808:	01 90       	ld	r0, Z+
 80a:	01 10       	cpse	r0, r1
 80c:	d8 f7       	brcc	.-10     	; 0x804 <strnlen+0x2>
 80e:	80 95       	com	r24
 810:	90 95       	com	r25
 812:	8e 0f       	add	r24, r30
 814:	9f 1f       	adc	r25, r31
 816:	08 95       	ret

00000818 <fputc>:
 818:	0f 93       	push	r16
 81a:	1f 93       	push	r17
 81c:	cf 93       	push	r28
 81e:	df 93       	push	r29
 820:	fb 01       	movw	r30, r22
 822:	23 81       	ldd	r18, Z+3	; 0x03
 824:	21 fd       	sbrc	r18, 1
 826:	03 c0       	rjmp	.+6      	; 0x82e <fputc+0x16>
 828:	8f ef       	ldi	r24, 0xFF	; 255
 82a:	9f ef       	ldi	r25, 0xFF	; 255
 82c:	2c c0       	rjmp	.+88     	; 0x886 <fputc+0x6e>
 82e:	22 ff       	sbrs	r18, 2
 830:	16 c0       	rjmp	.+44     	; 0x85e <fputc+0x46>
 832:	46 81       	ldd	r20, Z+6	; 0x06
 834:	57 81       	ldd	r21, Z+7	; 0x07
 836:	24 81       	ldd	r18, Z+4	; 0x04
 838:	35 81       	ldd	r19, Z+5	; 0x05
 83a:	42 17       	cp	r20, r18
 83c:	53 07       	cpc	r21, r19
 83e:	44 f4       	brge	.+16     	; 0x850 <fputc+0x38>
 840:	a0 81       	ld	r26, Z
 842:	b1 81       	ldd	r27, Z+1	; 0x01
 844:	9d 01       	movw	r18, r26
 846:	2f 5f       	subi	r18, 0xFF	; 255
 848:	3f 4f       	sbci	r19, 0xFF	; 255
 84a:	31 83       	std	Z+1, r19	; 0x01
 84c:	20 83       	st	Z, r18
 84e:	8c 93       	st	X, r24
 850:	26 81       	ldd	r18, Z+6	; 0x06
 852:	37 81       	ldd	r19, Z+7	; 0x07
 854:	2f 5f       	subi	r18, 0xFF	; 255
 856:	3f 4f       	sbci	r19, 0xFF	; 255
 858:	37 83       	std	Z+7, r19	; 0x07
 85a:	26 83       	std	Z+6, r18	; 0x06
 85c:	14 c0       	rjmp	.+40     	; 0x886 <fputc+0x6e>
 85e:	8b 01       	movw	r16, r22
 860:	ec 01       	movw	r28, r24
 862:	fb 01       	movw	r30, r22
 864:	00 84       	ldd	r0, Z+8	; 0x08
 866:	f1 85       	ldd	r31, Z+9	; 0x09
 868:	e0 2d       	mov	r30, r0
 86a:	09 95       	icall
 86c:	89 2b       	or	r24, r25
 86e:	e1 f6       	brne	.-72     	; 0x828 <fputc+0x10>
 870:	d8 01       	movw	r26, r16
 872:	16 96       	adiw	r26, 0x06	; 6
 874:	8d 91       	ld	r24, X+
 876:	9c 91       	ld	r25, X
 878:	17 97       	sbiw	r26, 0x07	; 7
 87a:	01 96       	adiw	r24, 0x01	; 1
 87c:	17 96       	adiw	r26, 0x07	; 7
 87e:	9c 93       	st	X, r25
 880:	8e 93       	st	-X, r24
 882:	16 97       	sbiw	r26, 0x06	; 6
 884:	ce 01       	movw	r24, r28
 886:	df 91       	pop	r29
 888:	cf 91       	pop	r28
 88a:	1f 91       	pop	r17
 88c:	0f 91       	pop	r16
 88e:	08 95       	ret

00000890 <__ultoa_invert>:
 890:	fa 01       	movw	r30, r20
 892:	aa 27       	eor	r26, r26
 894:	28 30       	cpi	r18, 0x08	; 8
 896:	51 f1       	breq	.+84     	; 0x8ec <__ultoa_invert+0x5c>
 898:	20 31       	cpi	r18, 0x10	; 16
 89a:	81 f1       	breq	.+96     	; 0x8fc <__ultoa_invert+0x6c>
 89c:	e8 94       	clt
 89e:	6f 93       	push	r22
 8a0:	6e 7f       	andi	r22, 0xFE	; 254
 8a2:	6e 5f       	subi	r22, 0xFE	; 254
 8a4:	7f 4f       	sbci	r23, 0xFF	; 255
 8a6:	8f 4f       	sbci	r24, 0xFF	; 255
 8a8:	9f 4f       	sbci	r25, 0xFF	; 255
 8aa:	af 4f       	sbci	r26, 0xFF	; 255
 8ac:	b1 e0       	ldi	r27, 0x01	; 1
 8ae:	3e d0       	rcall	.+124    	; 0x92c <__ultoa_invert+0x9c>
 8b0:	b4 e0       	ldi	r27, 0x04	; 4
 8b2:	3c d0       	rcall	.+120    	; 0x92c <__ultoa_invert+0x9c>
 8b4:	67 0f       	add	r22, r23
 8b6:	78 1f       	adc	r23, r24
 8b8:	89 1f       	adc	r24, r25
 8ba:	9a 1f       	adc	r25, r26
 8bc:	a1 1d       	adc	r26, r1
 8be:	68 0f       	add	r22, r24
 8c0:	79 1f       	adc	r23, r25
 8c2:	8a 1f       	adc	r24, r26
 8c4:	91 1d       	adc	r25, r1
 8c6:	a1 1d       	adc	r26, r1
 8c8:	6a 0f       	add	r22, r26
 8ca:	71 1d       	adc	r23, r1
 8cc:	81 1d       	adc	r24, r1
 8ce:	91 1d       	adc	r25, r1
 8d0:	a1 1d       	adc	r26, r1
 8d2:	20 d0       	rcall	.+64     	; 0x914 <__ultoa_invert+0x84>
 8d4:	09 f4       	brne	.+2      	; 0x8d8 <__ultoa_invert+0x48>
 8d6:	68 94       	set
 8d8:	3f 91       	pop	r19
 8da:	2a e0       	ldi	r18, 0x0A	; 10
 8dc:	26 9f       	mul	r18, r22
 8de:	11 24       	eor	r1, r1
 8e0:	30 19       	sub	r19, r0
 8e2:	30 5d       	subi	r19, 0xD0	; 208
 8e4:	31 93       	st	Z+, r19
 8e6:	de f6       	brtc	.-74     	; 0x89e <__ultoa_invert+0xe>
 8e8:	cf 01       	movw	r24, r30
 8ea:	08 95       	ret
 8ec:	46 2f       	mov	r20, r22
 8ee:	47 70       	andi	r20, 0x07	; 7
 8f0:	40 5d       	subi	r20, 0xD0	; 208
 8f2:	41 93       	st	Z+, r20
 8f4:	b3 e0       	ldi	r27, 0x03	; 3
 8f6:	0f d0       	rcall	.+30     	; 0x916 <__ultoa_invert+0x86>
 8f8:	c9 f7       	brne	.-14     	; 0x8ec <__ultoa_invert+0x5c>
 8fa:	f6 cf       	rjmp	.-20     	; 0x8e8 <__ultoa_invert+0x58>
 8fc:	46 2f       	mov	r20, r22
 8fe:	4f 70       	andi	r20, 0x0F	; 15
 900:	40 5d       	subi	r20, 0xD0	; 208
 902:	4a 33       	cpi	r20, 0x3A	; 58
 904:	18 f0       	brcs	.+6      	; 0x90c <__ultoa_invert+0x7c>
 906:	49 5d       	subi	r20, 0xD9	; 217
 908:	31 fd       	sbrc	r19, 1
 90a:	40 52       	subi	r20, 0x20	; 32
 90c:	41 93       	st	Z+, r20
 90e:	02 d0       	rcall	.+4      	; 0x914 <__ultoa_invert+0x84>
 910:	a9 f7       	brne	.-22     	; 0x8fc <__ultoa_invert+0x6c>
 912:	ea cf       	rjmp	.-44     	; 0x8e8 <__ultoa_invert+0x58>
 914:	b4 e0       	ldi	r27, 0x04	; 4
 916:	a6 95       	lsr	r26
 918:	97 95       	ror	r25
 91a:	87 95       	ror	r24
 91c:	77 95       	ror	r23
 91e:	67 95       	ror	r22
 920:	ba 95       	dec	r27
 922:	c9 f7       	brne	.-14     	; 0x916 <__ultoa_invert+0x86>
 924:	00 97       	sbiw	r24, 0x00	; 0
 926:	61 05       	cpc	r22, r1
 928:	71 05       	cpc	r23, r1
 92a:	08 95       	ret
 92c:	9b 01       	movw	r18, r22
 92e:	ac 01       	movw	r20, r24
 930:	0a 2e       	mov	r0, r26
 932:	06 94       	lsr	r0
 934:	57 95       	ror	r21
 936:	47 95       	ror	r20
 938:	37 95       	ror	r19
 93a:	27 95       	ror	r18
 93c:	ba 95       	dec	r27
 93e:	c9 f7       	brne	.-14     	; 0x932 <__ultoa_invert+0xa2>
 940:	62 0f       	add	r22, r18
 942:	73 1f       	adc	r23, r19
 944:	84 1f       	adc	r24, r20
 946:	95 1f       	adc	r25, r21
 948:	a0 1d       	adc	r26, r0
 94a:	08 95       	ret

0000094c <_exit>:
 94c:	f8 94       	cli

0000094e <__stop_program>:
 94e:	ff cf       	rjmp	.-2      	; 0x94e <__stop_program>
